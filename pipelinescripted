
node{ 
try {
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([cron('* * * * * ')])])
    def mavenHome = tool name: 'maven 3.8.6'//variable declaration for maven homepath
    
    stage('CheckOutCode'){
        git branch: 'Dev', credentialsId: '0228e0bc-f62a-47e5-a5ef-e4e845025812', url: 'https://github.com/AmarDevops01/maven-web-application.git'
    }//stage closing
    
    stage('Build'){
        sh "$mavenHome/bin/mvn clean package"
    }
    
    stage('ExecutingSonarQubeReport'){
        sh "$mavenHome/bin/mvn sonar:sonar"
    }
    
    stage('UploadingArtifactIDintoNexus'){
        sh "$mavenHome/bin/mvn deploy"
    }
    
    stage('DeployintoTomcat'){
       // deploy adapters: [tomcat9(credentialsId: '7f26d85c-00c3-4eab-bd46-3f65aadadc00', path: '', url: 'http://15.207.84.117:8080/')], contextPath: null, war: '**/maven-web-application.war'
    sshagent(['69abac74-4ddd-4c5b-a850-8e545b0eabc4']) {
   sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.111.188.9:/opt/tomcat9/webapps/"    
    }
    }
}//try closing 

catch(e){
currentBuild.result='FAILURE'
thtow e
}//catch closing
finally {
slackNotifications(currentBuild.result)
}//finall closing 

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
}//closing node
